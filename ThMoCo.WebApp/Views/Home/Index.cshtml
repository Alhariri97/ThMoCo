@model HomeViewModel

@{
    ViewData["Title"] = "Products";
        // Example: retrieve categories from ViewBag
    // Ensure your controller sets ViewBag.Categories to a List<string> or similar
    var categories = ViewBag.Categories as List<string> ?? new List<string>();

    // Keep the previously selected category if it was submitted
    var currentCategory = ViewContext.HttpContext.Request.Query["category"].ToString();

}

<h2 class="display-4">Products</h2>

<!-- Search Form -->
<form method="get" class="mb-3">
    <!-- Search Field -->
    <div class="input-group mb-2">
        <span class="input-group-text">Search</span>
        <input type="text"
               class="form-control"
               name="search"
               placeholder="Search products..."
               value="@ViewContext.HttpContext.Request.Query["search"]" />
        <button type="submit" class="btn btn-primary">Search</button>
    </div>

    <!-- Category Field -->
    <div class="input-group mb-2">
        <label class="input-group-text" for="categorySelect">Category</label>
        <select class="form-select" id="categorySelect" name="category" onchange="submitForm()">
            <option value="">All Categories</option>
            @foreach (var cat in Model.Categories)
            {
                var selected = (cat == currentCategory) ? "selected" : "";
                @if (cat == currentCategory)
                {
                            <option value="@cat" selected>@cat</option>
                }
                else
                {
                            <option value="@cat">@cat</option>
                }
            }
        </select>
        <span class="input-group-text">Min Price</span>
        <input type="number"
               class="form-control"
               name="minPrice"
               placeholder="0"
               min="10"
               step="10.0"
               value="@ViewContext.HttpContext.Request.Query["minPrice"]" />

        <span class="input-group-text">Max Price</span>
        <input type="number"
               class="form-control"
               name="maxPrice"
               placeholder="9999"
               min="10"
               step="10.0"
               value="@ViewContext.HttpContext.Request.Query["maxPrice"]" />

        <a href="@Url.Action("Index", "Home")" class="btn btn-secondary">Clear</a>
    </div>
</form>

<script>
    function submitForm() {
        document.querySelector('form').submit();
    }
</script>





<!-- Products Table -->
@if (!Model.Products.Any())
{
    <div class="alert alert-warning text-center">
        No products found.
    </div>
}
else
{
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-5 g-4">
        @foreach (var product in Model.Products)
        {
            @await Html.PartialAsync("_ProductCard", product)
        }
    </div>

}
