name: build-and-deploy-web-app

on:
  push:
    branches:
      - main  # Trigger the workflow only on push to main
  workflow_dispatch:
  
env:
  DOTNET_VERSION: 8.0.x
  BUILD_CONFIGURATION: Release
  PROJECT_PATH: ./ThMoCo.Api         # set this to the directory path of your project
  PUBLISH_PATH: ./myapp
  TESTRESULTS_PATH: ./ThMoCo.Tests
  AZURE_WEBAPP_NAME: thamcodevah-app  # set this to your Azure's app name


jobs:

  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Install dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: Install dependencies
        run: dotnet restore
      - name: Build code
        run: |
          dotnet build \
            --configuration $BUILD_CONFIGURATION \
            --no-restore
      - name: Run unit tests
        run: |
          dotnet test \
            --configuration $BUILD_CONFIGURATION \
            --no-build \
            --logger trx \
            --results-directory $TESTRESULTS_PATH
      - name: Store test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ${{ env.TESTRESULTS_PATH }}
        if: ${{ always() }} # ensures test results uploaded even after failure
      - name: Package build
        run: |
          dotnet publish $PROJECT_PATH \
            --configuration $BUILD_CONFIGURATION \
            --no-build \
            --output $PUBLISH_PATH
      - name: Store build artefact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: ${{ env.PUBLISH_PATH }}


  deploy-to-azure:
    runs-on: ubuntu-22.04
    needs: build
#   environment:
#     name: 'production'
#     url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
#   if: github.ref == 'refs/heads/master'
    steps:
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Azure CLI scrip
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account show
            
      - uses: actions/download-artifact@v3
        with:
          name: build
          path: ${{ env.PUBLISH_PATH }}
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with: 
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE  }} # Define secret in GitHub with contents of Publish Profile
          package: ${{ env.PUBLISH_PATH }}
