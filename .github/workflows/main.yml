name: build-and-deploy-web-app

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DOTNET_VERSION: 8.0.x
  BUILD_CONFIGURATION: Release

  PROJECT_PATH: ./ThMoCo.Api
  PUBLISH_PATH: ./publish/backend
  AZURE_WEBAPP_NAME: thamcodevah-app

  FRONTEND_PROJECT_PATH: ./ThMoCo.WebApp
  FRONTEND_PUBLISH_PATH: ./publish/frontend
  AZURE_FRONTEND_WEBAPP_NAME: thamcodevah-frontend-app

  TESTRESULTS_PATH: ./test-results
  AZURE_RG_Name: thamco-devah-rg

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Build projects
        run: dotnet build --configuration $BUILD_CONFIGURATION --no-restore

      - name: Run unit tests
        run: |
          dotnet test --configuration $BUILD_CONFIGURATION --no-build --logger trx --results-directory "$TESTRESULTS_PATH"

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ${{ env.TESTRESULTS_PATH }}
        if: ${{ always() }}

      - name: Publish backend
        run: |
          dotnet publish "$PROJECT_PATH" --configuration $BUILD_CONFIGURATION --no-build --output "$PUBLISH_PATH"

      - name: Upload backend artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: ${{ env.PUBLISH_PATH }}

      - name: Publish frontend
        run: |
          dotnet publish "$FRONTEND_PROJECT_PATH" --configuration $BUILD_CONFIGURATION --no-build --output "$FRONTEND_PUBLISH_PATH"

      - name: Upload frontend artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: ${{ env.FRONTEND_PUBLISH_PATH }}

  deploy-to-azure:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Verify Azure Account
        run: az account show

      - name: Download backend build artifact for deployment
        uses: actions/download-artifact@v4
        with:
          name: backend-build
          path: ${{ env.PUBLISH_PATH }}

      - name: Deploy backend to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.PUBLISH_PATH }}

      - name: Set backend environment variables
        run: |
          az webapp config appsettings set \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --resource-group ${{ env.AZURE_RG_Name }} \
            --settings \
              "ConnectionStrings:ConnectionString=${{ secrets.DB_CONNECTION_STRING }}" \
              "EnableSwaggerInProduction=true" \
              "Auth0:Domain=${{ secrets.AUTH0_DOMAIN }}" \
              "Auth0:Audience=${{ secrets.AUTH0_IDENTIFIER }}"

      - name: Download frontend build artifact for deployment
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: ${{ env.FRONTEND_PUBLISH_PATH }}

      - name: Deploy frontend to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_FRONTEND_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_FRONTEND_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.FRONTEND_PUBLISH_PATH }}

      - name: Set frontend environment variables
        run: |
          az webapp config appsettings set \
            --name ${{ env.AZURE_FRONTEND_WEBAPP_NAME }} \
            --resource-group ${{ env.AZURE_RG_Name }} \
            --settings \
              "ApiSettings:BaseUrl=https://thamcodevah-app.azurewebsites.net/" \
              "Auth0:Domain=${{ secrets.AUTH_DOMAIN }}" \
              "Auth0:Authority=${{ secrets.AUTH_AUTHORITY }}" \
              "Auth0:ClientSecret=${{ secrets.AUTH_CLIENT_SECRET }}" \
              "Auth0:ClientId=${{ secrets.AUTH_CLIENT_ID }}" \
              "Values:BaseAddress=${{ vars.BASEADDRESS }}" \
              "Values:AuthAudience=${{ vars.AUTHAUDIENCE }}"
